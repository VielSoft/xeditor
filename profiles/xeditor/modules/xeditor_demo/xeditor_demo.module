<?php

/**
 * @file
 * Demonstration functionality for the Xeditor distribution.
 */

/**
 * Implementation of hook_ctools_plugin_api().
 *
 * Tell CTools that we support the panels default layouts API and the page
 * manager default pages API.
 */
function xeditor_demo_ctools_plugin_api($owner, $api) {
  if (($owner == 'panels' && $api == 'layouts') ||
      ($owner == 'page_manager' && $api == 'pages_default')) {
    return array('version' => 1);
  }
}

// == Layouts =================================================================

/**
 * Implementation of hook_default_panels_layout().
 *
 * Provide a default layout for demonstration.
 */
function xeditor_demo_default_panels_layout() {
  $export = array();

  $layout = new stdClass();
  $layout->disabled = FALSE; /* Edit this to true to make a default layout disabled initially */
  $layout->api_version = 1;
  $layout->name = 'xeditor_demo_home';
  $layout->admin_title = 'Xeditor demo home';
  $layout->admin_description = '';
  $layout->category = '';
  $layout->plugin = 'responsive';
  $layout->settings = array(
    'regions' => array(
      'header_a' => 'header_a',
      'header_b' => 'header_b',
      'header_c' => 'header_c',
      'subheader_a' => 'subheader_a',
      'subheader_b' => 'subheader_b',
      'subheader_c' => 'subheader_c',
      'navigation' => 'navigation',
      'title' => 'title',
      'sidebar_a' => 'sidebar_a',
      'body' => 'body',
      'sidebar_b' => 'sidebar_b',
      'footer_a' => 'footer_a',
      'footer_b' => 'footer_b',
      'footer_c' => 'footer_c',
    ),
    'overrides' => array(
      'smartphone' => array(),
      'tablet' => array(
        0 => array(
          'name' => 'header_a',
          'columns' => 2,
        ),
        1 => array(
          'name' => 'header_b',
          'columns' => 2,
        ),
        2 => array(
          'name' => 'header_c',
          'columns' => 2,
        ),
        3 => array(
          'name' => 'subheader_a',
          'columns' => 2,
        ),
        4 => array(
          'name' => 'subheader_b',
          'columns' => 2,
        ),
        5 => array(
          'name' => 'subheader_c',
          'columns' => 2,
        ),
        6 => array(
          'name' => 'body',
          'columns' => 4,
        ),
        7 => array(
          'name' => 'sidebar_a',
          'columns' => 1,
        ),
        8 => array(
          'name' => 'sidebar_b',
          'columns' => 1,
        ),
        9 => array(
          'name' => 'footer_a',
          'columns' => 2,
        ),
        10 => array(
          'name' => 'footer_b',
          'columns' => 2,
        ),
        11 => array(
          'name' => 'footer_c',
          'columns' => 2,
        ),
      ),
      'standard' => array(
        0 => array(
          'name' => 'header_a',
          'columns' => 6,
        ),
        1 => array(
          'name' => 'header_b',
          'columns' => 3,
        ),
        2 => array(
          'name' => 'header_c',
          'columns' => 3,
        ),
        3 => array(
          'name' => 'subheader_a',
          'columns' => 4,
        ),
        4 => array(
          'name' => 'subheader_b',
          'columns' => 4,
        ),
        5 => array(
          'name' => 'subheader_c',
          'columns' => 4,
        ),
        6 => array(
          'name' => 'body',
          'columns' => 7,
        ),
        7 => array(
          'name' => 'sidebar_a',
          'columns' => 3,
        ),
        8 => array(
          'name' => 'sidebar_b',
          'columns' => 2,
        ),
        9 => array(
          'name' => 'footer_a',
          'columns' => 4,
        ),
        10 => array(
          'name' => 'footer_b',
          'columns' => 4,
        ),
        11 => array(
          'name' => 'footer_c',
          'columns' => 4,
        ),
      ),
    ),
  );
  $export['xeditor_demo_home'] = $layout;

  return $export;
}

// == Pages ===================================================================

/**
 * Implements hook_default_page_manager_pages().
 */
function xeditor_demo_default_page_manager_pages() {
  $page = new stdClass();
  $page->disabled = FALSE; /* Edit this to true to make a default page disabled initially */
  $page->api_version = 1;
  $page->name = 'xeditor_demo_home';
  $page->task = 'page';
  $page->admin_title = 'Xeditor demo home';
  $page->admin_description = '';
  $page->path = 'xeditor-demo-home';
  $page->access = array();
  $page->menu = array();
  $page->arguments = array();
  $page->conf = array(
    'admin_paths' => FALSE,
  );
  $page->default_handlers = array();
  $handler = new stdClass();
  $handler->disabled = FALSE; /* Edit this to true to make a default handler disabled initially */
  $handler->api_version = 1;
  $handler->name = 'page_xeditor_demo_home_panel_context';
  $handler->task = 'page';
  $handler->subtask = 'xeditor_demo_home';
  $handler->handler = 'panel_context';
  $handler->weight = 0;
  $handler->conf = array(
    'title' => 'Panel',
    'no_blocks' => 1,
    'pipeline' => 'ipe',
    'body_classes_to_remove' => '',
    'body_classes_to_add' => '',
    'css_id' => '',
    'css' => '',
    'contexts' => array(),
    'relationships' => array(),
  );
  $display = new panels_display();
  $display->layout = 'responsive:xeditor_demo_home';
  $display->layout_settings = array();
  $display->panel_settings = array(
    'style_settings' => array(
      'default' => NULL,
      'header_a' => NULL,
      'header_b' => NULL,
      'header_c' => NULL,
      'subheader_a' => NULL,
      'subheader_b' => NULL,
      'subheader_c' => NULL,
      'navigation' => NULL,
      'title' => NULL,
      'sidebar_a' => NULL,
      'body' => NULL,
      'sidebar_b' => NULL,
      'footer_a' => NULL,
      'footer_b' => NULL,
      'footer_c' => NULL,
    ),
  );
  $display->cache = array();
  $display->title = '';
  $display->content = array();
  $display->panels = array();
  $pane = new stdClass();
  $pane->pid = 'new-1';
  $pane->panel = 'body';
  $pane->type = 'block';
  $pane->subtype = 'views-homepage_blogroll-block';
  $pane->shown = TRUE;
  $pane->access = array();
  $pane->configuration = array(
    'override_title' => 1,
    'override_title_text' => '',
  );
  $pane->cache = array();
  $pane->style = array();
  $pane->css = array();
  $pane->extras = array();
  $pane->position = 0;
  $pane->locks = array();
  $display->content['new-1'] = $pane;
  $display->panels['body'][0] = 'new-1';
  $pane = new stdClass();
  $pane->pid = 'new-2';
  $pane->panel = 'sidebar_a';
  $pane->type = 'block';
  $pane->subtype = 'search-form';
  $pane->shown = TRUE;
  $pane->access = array();
  $pane->configuration = array(
    'override_title' => 0,
    'override_title_text' => '',
  );
  $pane->cache = array();
  $pane->style = array(
    'settings' => NULL,
  );
  $pane->css = array();
  $pane->extras = array();
  $pane->position = 0;
  $pane->locks = array();
  $display->content['new-2'] = $pane;
  $display->panels['sidebar_a'][0] = 'new-2';
  $pane = new stdClass();
  $pane->pid = 'new-3';
  $pane->panel = 'sidebar_a';
  $pane->type = 'block';
  $pane->subtype = 'system-navigation';
  $pane->shown = TRUE;
  $pane->access = array();
  $pane->configuration = array(
    'override_title' => 0,
    'override_title_text' => '',
  );
  $pane->cache = array();
  $pane->style = array(
    'settings' => NULL,
  );
  $pane->css = array();
  $pane->extras = array();
  $pane->position = 1;
  $pane->locks = array();
  $display->content['new-3'] = $pane;
  $display->panels['sidebar_a'][1] = 'new-3';
  $pane = new stdClass();
  $pane->pid = 'new-4';
  $pane->panel = 'title';
  $pane->type = 'page_title';
  $pane->subtype = 'page_title';
  $pane->shown = TRUE;
  $pane->access = array();
  $pane->configuration = array(
    'markup' => 'h1',
    'class' => '',
    'id' => '',
    'override_title' => 0,
    'override_title_text' => '',
  );
  $pane->cache = array();
  $pane->style = array(
    'settings' => NULL,
  );
  $pane->css = array();
  $pane->extras = array();
  $pane->position = 0;
  $pane->locks = array();
  $display->content['new-4'] = $pane;
  $display->panels['title'][0] = 'new-4';
  $display->hide_title = PANELS_TITLE_NONE;
  $display->title_pane = 'new-4';
  $handler->conf['display'] = $display;
  $page->default_handlers[$handler->name] = $handler;

  // Do not overwrite me. :)
  $pages['xeditor_demo_home'] = $page;

  return $pages;
}


/**
 * Implements hook_views_api().
 */ 
function xeditor_demo_views_api() {
  return array(
    'api' => 3.0,
    'path' => drupal_get_path('module', 'xeditor_demo')
  );
}


/**
 * Implements hook_views_default_views().
 */ 
function xeditor_demo_views_default_views() {
  $view = new view();
  $view->name = 'homepage_blogroll';
  $view->description = 'Display the latest contents.';
  $view->tag = 'default';
  $view->base_table = 'node';
  $view->human_name = 'Blogroll';
  $view->core = 7;
  $view->api_version = '3.0';
  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */

  /* Display: Master */
  $handler = $view->new_display('default', 'Master', 'default');
  $handler->display->display_options['title'] = 'Blogroll';
  $handler->display->display_options['use_more_always'] = FALSE;
  $handler->display->display_options['access']['type'] = 'perm';
  $handler->display->display_options['cache']['type'] = 'none';
  $handler->display->display_options['query']['type'] = 'views_query';
  $handler->display->display_options['exposed_form']['type'] = 'basic';
  $handler->display->display_options['pager']['type'] = 'full';
  $handler->display->display_options['pager']['options']['items_per_page'] = '5';
  $handler->display->display_options['style_plugin'] = 'default';
  $handler->display->display_options['row_plugin'] = 'node';
  /* Field: Content: Title */
  $handler->display->display_options['fields']['title']['id'] = 'title';
  $handler->display->display_options['fields']['title']['table'] = 'node';
  $handler->display->display_options['fields']['title']['field'] = 'title';
  $handler->display->display_options['fields']['title']['label'] = '';
  $handler->display->display_options['fields']['title']['alter']['word_boundary'] = FALSE;
  $handler->display->display_options['fields']['title']['alter']['ellipsis'] = FALSE;
  /* Sort criterion: Content: Sticky */
  $handler->display->display_options['sorts']['sticky']['id'] = 'sticky';
  $handler->display->display_options['sorts']['sticky']['table'] = 'node';
  $handler->display->display_options['sorts']['sticky']['field'] = 'sticky';
  $handler->display->display_options['sorts']['sticky']['order'] = 'DESC';
  /* Sort criterion: Content: Post date */
  $handler->display->display_options['sorts']['created']['id'] = 'created';
  $handler->display->display_options['sorts']['created']['table'] = 'node';
  $handler->display->display_options['sorts']['created']['field'] = 'created';
  $handler->display->display_options['sorts']['created']['order'] = 'DESC';
  /* Filter criterion: Content: Promoted to front page */
  $handler->display->display_options['filters']['promote']['id'] = 'promote';
  $handler->display->display_options['filters']['promote']['table'] = 'node';
  $handler->display->display_options['filters']['promote']['field'] = 'promote';
  $handler->display->display_options['filters']['promote']['value'] = '1';
  $handler->display->display_options['filters']['promote']['group'] = 1;
  /* Filter criterion: Content: Published */
  $handler->display->display_options['filters']['status']['id'] = 'status';
  $handler->display->display_options['filters']['status']['table'] = 'node';
  $handler->display->display_options['filters']['status']['field'] = 'status';
  $handler->display->display_options['filters']['status']['value'] = 1;
  $handler->display->display_options['filters']['status']['group'] = 1;
  $handler->display->display_options['filters']['status']['expose']['operator'] = FALSE;

  /* Display: Block */
  $handler = $view->new_display('block', 'Block', 'block');
  
  $views[$view->name] = $view;
  return $views;
}
